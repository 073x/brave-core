diff --git a/third_party/blink/renderer/core/script/pending_import_map.cc b/third_party/blink/renderer/core/script/pending_import_map.cc
index 2d51fbf4301221cc172fef521faa43446b71c725..4f639520a39d2275ebd2f1d08748eab385cbf86e 100644
--- a/third_party/blink/renderer/core/script/pending_import_map.cc
+++ b/third_party/blink/renderer/core/script/pending_import_map.cc
@@ -11,6 +11,13 @@
 #include "third_party/blink/renderer/core/script/script_element_base.h"
 #include "third_party/blink/renderer/platform/weborigin/kurl.h"
 
+#include "brave/third_party/blink/brave_page_graph/buildflags/buildflags.h"
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+#include "third_party/blink/renderer/core/frame/local_frame.h"
+#include "third_party/blink/renderer/core/dom/dom_node_ids.h"
+#include "brave/third_party/blink/brave_page_graph/page_graph.h"
+#endif
+
 namespace blink {
 
 PendingImportMap* PendingImportMap::CreateInline(ScriptElementBase& element,
@@ -20,7 +27,7 @@ PendingImportMap* PendingImportMap::CreateInline(ScriptElementBase& element,
   Document* context_document = element_document.ContextDocument();
   ScriptState* script_state =
       ToScriptStateForMainWorld(context_document->GetFrame());
-  Modulator* modulator = Modulator::From(script_state);
+  Modulator* modulator = Modulator::From(script_state, context_document->GetFrame()->GetDocument()->GetPageGraph(), element.GetDOMNodeId());
 
   ScriptValue error_to_rethrow;
   ImportMap* import_map = ImportMap::Parse(
@@ -83,7 +90,7 @@ void PendingImportMap::RegisterImportMap() const {
   if (!frame)
     return;
 
-  Modulator* modulator = Modulator::From(ToScriptStateForMainWorld(frame));
+  Modulator* modulator = Modulator::From(ToScriptStateForMainWorld(frame), context_document->GetFrame()->GetDocument()->GetPageGraph(), element_->GetDOMNodeId());
 
   ScriptState* script_state = modulator->GetScriptState();
   ScriptState::Scope scope(script_state);
