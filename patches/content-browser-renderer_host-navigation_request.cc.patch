diff --git a/content/browser/renderer_host/navigation_request.cc b/content/browser/renderer_host/navigation_request.cc
index cb4c320c7f020c7219a60c34e232f7be42dde548..cf39fad05ffaa3df3f808346492235847ab53151 100644
--- a/content/browser/renderer_host/navigation_request.cc
+++ b/content/browser/renderer_host/navigation_request.cc
@@ -1411,10 +1411,12 @@ NavigationRequest::CreateForSynchronousRendererCommit(
       ChildProcessHost::kInvalidUniqueID /* initiator_process_id */,
       false /* was_opener_suppressed */, false /* is_pdf */));
 
-  absl::optional<base::UnguessableToken> nonce =
-      render_frame_host->ComputeNonce(navigation_request->is_anonymous());
   url::Origin top_level_origin =
       render_frame_host->ComputeTopFrameOrigin(origin);
+  absl::optional<base::UnguessableToken> nonce =
+      render_frame_host->ComputeNonce(
+          origin, render_frame_host->ComputeSiteForCookies(), top_level_origin,
+          navigation_request->is_anonymous());
   navigation_request->commit_params_->storage_key =
       blink::StorageKey::CreateWithOptionalNonce(
           origin, net::SchemefulSite(top_level_origin),
@@ -2844,6 +2846,7 @@ void NavigationRequest::OnRequestRedirected(
   common_params_->url = redirect_info.new_url;
   common_params_->method = redirect_info.new_method;
   common_params_->referrer->url = GURL(redirect_info.new_referrer);
+  BRAVE_ONREQUESTREDIRECTED_MAYBEHIDEREFERRER
   common_params_->referrer = Referrer::SanitizeForRequest(
       common_params_->url, *common_params_->referrer);
 
@@ -4321,6 +4324,7 @@ void NavigationRequest::OnStartChecksComplete(
   headers.MergeFrom(TakeModifiedRequestHeaders());
   begin_params_->headers = headers.ToString();
 
+  BRAVE_ONSTARTCHECKSCOMPLETE_MAYBEHIDEREFERRER
   // TODO(clamy): Avoid cloning the navigation params and create the
   // ResourceRequest directly here.
   std::vector<std::unique_ptr<NavigationLoaderInterceptor>> interceptor;
@@ -4913,7 +4917,10 @@ void NavigationRequest::CommitNavigation() {
   // moment. We will be able to use it once the browser can compute the origin
   // to commit.
   absl::optional<base::UnguessableToken> nonce =
-      render_frame_host_->ComputeNonce(is_anonymous());
+      render_frame_host_->ComputeNonce(
+          GetOriginToCommit(), render_frame_host_->ComputeSiteForCookies(),
+          render_frame_host_->ComputeTopFrameOrigin(GetOriginToCommit()),
+          is_anonymous());
   commit_params_->storage_key = render_frame_host_->CalculateStorageKey(
       GetOriginToCommit(), base::OptionalToPtr(nonce));
 
