diff --git a/chrome/browser/ui/views/autofill/autofill_popup_view_native_views.cc b/chrome/browser/ui/views/autofill/autofill_popup_view_native_views.cc
index b7fec548678c..ff0ecc2ee77a 100644
--- a/chrome/browser/ui/views/autofill/autofill_popup_view_native_views.cc
+++ b/chrome/browser/ui/views/autofill/autofill_popup_view_native_views.cc
@@ -492,7 +492,9 @@ void AutofillPopupItemView::OnGestureEvent(ui::GestureEvent* event) {
 }
 
 void AutofillPopupItemView::CreateContent() {
+#if !defined(OS_ANDROID)
   AutofillPopupController* controller = popup_view()->controller();
+#endif
 
   auto* layout_manager = SetLayoutManager(std::make_unique<views::BoxLayout>(
       views::BoxLayout::Orientation::kHorizontal,
@@ -502,8 +504,11 @@ void AutofillPopupItemView::CreateContent() {
       views::BoxLayout::CrossAxisAlignment::kCenter);
 
   std::vector<Suggestion> suggestions = controller->GetSuggestions();
-
+#if !defined(OS_ANDROID)
   const gfx::ImageSkia icon = GetIconImage(suggestions[line_number()]);
+#else
+  const gfx::ImageSkia icon = gfx::ImageSkia();
+#endif
 
   if (!icon.isNull()) {
     AddIcon(icon);
@@ -770,7 +775,9 @@ AutofillPopupFooterView* AutofillPopupFooterView::Create(
 }
 
 void AutofillPopupFooterView::CreateContent() {
+#if !defined(OS_ANDROID)
   AutofillPopupController* controller = popup_view()->controller();
+#endif
 
   views::BoxLayout* layout_manager =
       SetLayoutManager(std::make_unique<views::BoxLayout>(
@@ -780,8 +787,12 @@ void AutofillPopupFooterView::CreateContent() {
   layout_manager->set_cross_axis_alignment(
       views::BoxLayout::CrossAxisAlignment::kCenter);
 
+#if !defined(OS_ANDROID)
   const Suggestion suggestion = controller->GetSuggestions()[line_number()];
   const gfx::ImageSkia icon = GetIconImage(suggestion);
+#else
+  const gfx::ImageSkia icon = gfx::ImageSkia();
+#endif
 
   const bool use_leading_icon =
       base::Contains(kItemTypesUsingLeadingIcons, frontend_id());
