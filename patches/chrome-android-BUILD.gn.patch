diff --git a/chrome/android/BUILD.gn b/chrome/android/BUILD.gn
index fa35cf794a73357c7ebbdc3c858eb015ab0353fe..fa188ee62f1995c1a66b208e883da49545a97efa 100644
--- a/chrome/android/BUILD.gn
+++ b/chrome/android/BUILD.gn
@@ -37,7 +37,7 @@ import("//testing/test.gni")
 import("//third_party/icu/config.gni")
 import("//third_party/protobuf/proto_library.gni")
 import("//tools/resources/generate_resource_allowlist.gni")
-import("//weblayer/variables.gni")
+# import("//weblayer/variables.gni")
 import("channel.gni")
 import("java_sources.gni")
 import("static_initializers.gni")
@@ -102,6 +102,7 @@ if (current_toolchain == default_toolchain) {
       "java/res_chromium_base/mipmap-xxxhdpi/layered_app_icon_background.png",
       "java/res_chromium_base/values/channel_constants.xml",
     ]
+    sources += brave_base_module_resources
   }
 
   android_resources("chrome_app_java_resources") {
@@ -179,6 +180,7 @@ if (current_toolchain == default_toolchain) {
       "//third_party/androidx:androidx_gridlayout_gridlayout_java",
       "//third_party/androidx:androidx_preference_preference_java",
     ]
+    deps += brave_chrome_app_java_resources_deps sources += brave_java_resources resource_overlay = true
   }
 
   if (enable_vr) {
@@ -578,6 +580,7 @@ if (current_toolchain == default_toolchain) {
     ]
 
     deps += feed_deps
+    deps += brave_chrome_java_deps
 
     srcjar_deps = [
       ":chrome_android_java_enums_srcjar",
@@ -598,6 +601,7 @@ if (current_toolchain == default_toolchain) {
       "//components/supervised_user/core/browser:supervised_user_url_filter_enum_javagen",
       "//net:effective_connection_type_java",
     ]
+    srcjar_deps += brave_chrome_java_srcjar_deps
 
     # From java_sources.gni.
     sources = chrome_java_sources + [ app_hooks_impl ]
@@ -736,6 +740,7 @@ if (current_toolchain == default_toolchain) {
         "//chrome/android/features/tab_ui:module_desc_java",
       ]
     }
+    deps += brave_chrome_all_java_deps
   }
 
   action_with_pydeps("chrome_android_java_google_api_keys_srcjar") {
@@ -1973,6 +1978,7 @@ if (current_toolchain == default_toolchain) {
       "java/res_chromium_base/mipmap-xxxhdpi/layered_app_icon_background.png",
       "java/res_chromium_base/values/channel_constants.xml",
     ]
+    sources += brave_base_module_resources
 
     # Dep needed to ensure override works properly.
     deps = [ ":chrome_base_module_resources" ]
@@ -2118,61 +2124,71 @@ if (current_toolchain == default_toolchain) {
       # and //android_webview:generate_components_resources use hand-written
       # resource allowlists.
       if (_is_monochrome) {
-        _locale_allowlist_target = "${_variant}_locale_allowlist"
-        _locale_allowlist_file =
-            "$target_gen_dir/${_variant}_locale_allowlist.txt"
-        _system_webview_locale_allowlist_target =
-            "${_variant}_system_webview_locale_resource_allowlist"
-        _system_webview_locale_allowlist_file =
-            "$target_gen_dir/" +
-            "${_variant}_system_webview_locale_resource_id_list.txt"
-
-        action(_system_webview_locale_allowlist_target) {
-          script = "//tools/grit/pak_util.py"
-
-          _system_webview_en_US_locale_pak =
-              "$root_out_dir/android_webview/locales/en-US.pak"
-
-          inputs = [ _system_webview_en_US_locale_pak ]
-
-          outputs = [ _system_webview_locale_allowlist_file ]
-
-          deps = [ "//android_webview:repack_locales" ]
-
-          args = [
-            "list-id",
-            "--output",
-            rebase_path(_system_webview_locale_allowlist_file, root_build_dir),
-            rebase_path(_system_webview_en_US_locale_pak, root_build_dir),
-          ]
-        }
-
-        action(_locale_allowlist_target) {
-          script = "//tools/resources/filter_resource_allowlist.py"
-
-          inputs = [
-            _resource_allowlist_file,
-            _system_webview_locale_allowlist_file,
-          ]
-
-          outputs = [ _locale_allowlist_file ]
-
-          deps = [
-            ":$_resource_allowlist_target",
-            ":$_system_webview_locale_allowlist_target",
-            "//android_webview:system_webview_pak_allowlist",
-          ]
-
-          args = [
-            "--input",
-            rebase_path(_resource_allowlist_file, root_build_dir),
-            "--filter",
-            rebase_path(_system_webview_locale_allowlist_file, root_build_dir),
-            "--output",
-            rebase_path(_locale_allowlist_file, root_build_dir),
-          ]
-        }
-      }
+        # _locale_allowlist_target = "${_variant}_locale_allowlist"
+        # _locale_allowlist_file =
+        #     "$target_gen_dir/${_variant}_locale_allowlist.txt"
+        # _system_webview_locale_allowlist_target =
+        #     "${_variant}_system_webview_locale_resource_allowlist"
+        # _system_webview_locale_allowlist_file =
+        #     "$target_gen_dir/" +
+        #     "${_variant}_system_webview_locale_resource_id_list.txt"
+
+# ERROR Input to targets not generated by a dependency.
+# The file:
+#   //out/android_Release_arm/android_webview/locales/en-US.pak
+# is listed as an input or source for the targets:
+#   //chrome/android:monochrome_apk_system_webview_locale_resource_allowlist
+#   //chrome/android:monochrome_bundle_module_system_webview_locale_resource_allowlist
+# but no targets in the build generate that file.
+
+#         action(_system_webview_locale_allowlist_target) {
+#           script = "//tools/grit/pak_util.py"
+
+#           _system_webview_en_US_locale_pak =
+#               "$root_out_dir/android_webview/locales/en-US.pak"
+
+#           inputs = [ _system_webview_en_US_locale_pak ]
+
+#           outputs = [ _system_webview_locale_allowlist_file ]
+
+#           deps = [ 
+# #            "//android_webview:repack_locales" 
+#             ]
+
+#           args = [
+#             "list-id",
+#             "--output",
+#             rebase_path(_system_webview_locale_allowlist_file, root_build_dir),
+#             rebase_path(_system_webview_en_US_locale_pak, root_build_dir),
+#           ]
+#         }
+
+#         action(_locale_allowlist_target) {
+#           script = "//tools/resources/filter_resource_allowlist.py"
+
+#           inputs = [
+#             _resource_allowlist_file,
+# #            _system_webview_locale_allowlist_file,
+#           ]
+
+#           outputs = [ _locale_allowlist_file ]
+
+#           deps = [
+#             ":$_resource_allowlist_target",
+#             ":$_system_webview_locale_allowlist_target",
+# #            "//android_webview:system_webview_pak_allowlist",
+#           ]
+
+#           args = [
+#             "--input",
+#             rebase_path(_resource_allowlist_file, root_build_dir),
+#             "--filter",
+#             rebase_path(_system_webview_locale_allowlist_file, root_build_dir),
+#             "--output",
+#             rebase_path(_locale_allowlist_file, root_build_dir),
+#           ]
+#         }
+       }
     }
 
     chrome_paks("${_variant}_paks") {
@@ -2181,25 +2197,27 @@ if (current_toolchain == default_toolchain) {
 
       additional_extra_paks = []
       if (_is_monochrome) {
-        if (webview_includes_weblayer) {
-          additional_extra_paks +=
-              [ "$root_gen_dir/weblayer/weblayer_resources.pak" ]
-          deps += [ "//weblayer:resources" ]
-        }
+        # if (webview_includes_weblayer) {
+        #   additional_extra_paks +=
+        #       [ "$root_gen_dir/weblayer/weblayer_resources.pak" ]
+        #   deps += [ "//weblayer:resources" ]
+        # }
       }
       if (!dfmify_dev_ui || !_is_bundle_module) {
         additional_extra_paks += [ "$root_gen_dir/chrome/dev_ui_resources.pak" ]
         deps += [ "//chrome/browser/resources:dev_ui_paks" ]
       }
 
-      if (enable_resource_allowlist_generation) {
-        repack_allowlist = _resource_allowlist_file
-        deps += [ ":${_resource_allowlist_target}" ]
-        if (_is_monochrome) {
-          locale_allowlist = _locale_allowlist_file
-          deps += [ ":$_locale_allowlist_target" ]
-        }
-      }
+# //chrome/android:monochrome_apk_paks(//build/toolchain/android:android_clang_arm)
+#   needs //chrome/android:monochrome_apk_locale_allowlist(//build/toolchain/android:android_clang_arm)
+      # if (enable_resource_allowlist_generation) {
+      #   repack_allowlist = _resource_allowlist_file
+      #   deps += [ ":${_resource_allowlist_target}" ]
+      #   if (_is_monochrome) {
+      #     locale_allowlist = _locale_allowlist_file
+      #     deps += [ ":$_locale_allowlist_target" ]
+      #   }
+      # }
     }
 
     android_assets("${_variant}_locale_pak_assets") {
@@ -2230,11 +2248,12 @@ if (current_toolchain == default_toolchain) {
         ":${_variant}_locale_pak_assets",
         ":${_variant}_paks",
       ]
+      deps += [ "//brave:brave_pak_assets" ]
       if (_is_monochrome) {
-        deps += [ "//android_webview:locale_pak_assets" ]
-        if (webview_includes_weblayer && !_is_bundle_module) {
-          deps += [ "//weblayer:locale_pak_assets" ]
-        }
+#        deps += [ "//android_webview:locale_pak_assets" ]
+#        if (webview_includes_weblayer && !_is_bundle_module) {
+#          deps += [ "//weblayer:locale_pak_assets" ]
+#        }
       }
     }
   }
@@ -2422,6 +2441,7 @@ if (current_toolchain == default_toolchain) {
       shared_libraries = [ ":libchrome" ]
 
       version_name = chrome_version_name
+      deps += brave_public_apk_or_module_tmpl_deps loadable_modules = brave_public_apk_or_module_tmpl_loadable_modules
     }
   }
 
@@ -2435,7 +2455,7 @@ if (current_toolchain == default_toolchain) {
     deps = [
       ":base_module_java",
       ":base_monochrome_module_java",
-      "//android_webview:android_webview_java",
+#      "//android_webview:android_webview_java",
       "//base:base_java",
       "//chrome/android:chrome_java",
       "//components/version_info/android:version_constants_java",
@@ -2451,16 +2471,16 @@ if (current_toolchain == default_toolchain) {
     sources = [ "java/src/org/chromium/chrome/browser/base/SplitMonochromeApplication.java" ]
     deps = [
       ":base_module_java",
-      "//android_webview:android_webview_no_weblayer_java",
+#      "//android_webview:android_webview_no_weblayer_java",
       "//base:base_java",
       "//build/android:build_java",
       "//components/version_info/android:version_constants_java",
       "//components/version_info/android:version_constants_java",
       "//content/public/android:content_java",
     ]
-    if (webview_includes_weblayer) {
-      deps += [ "//weblayer/browser/java:base_module_java" ]
-    }
+    # if (webview_includes_weblayer) {
+    #   deps += [ "//weblayer/browser/java:base_module_java" ]
+    # }
   }
 
   # Target for classes which should be in the base module, even when //chrome code
@@ -2557,6 +2577,7 @@ if (current_toolchain == default_toolchain) {
       "//components/payments/content/android:service_java",
       "//third_party/androidx:androidx_browser_browser_java",
     ]
+    sources += brave_java_base_module_sources deps += brave_java_base_module_deps
 
     # More deps for DFMs.
     if (dfmify_dev_ui) {
@@ -2593,6 +2614,8 @@ if (current_toolchain == default_toolchain) {
   #   include_32_bit_webview: When compiling a 64-bit browser configuration, if
   #     true, a 32-bit WebView library will also be built and included.
   template("monochrome_public_apk_or_module_tmpl") {
+print("AB: at template monochrome_public_apk_or_module_tmpl")
+print("AB: target_name=",target_name)
     _is_trichrome = defined(invoker.is_trichrome) && invoker.is_trichrome
     _is_bundle = invoker.target_type == "android_app_bundle_module"
 
@@ -2618,12 +2641,12 @@ if (current_toolchain == default_toolchain) {
         # Resource allowlist used when generating R.java files and causes
         # only the webview subset of resources to be marked as non-final.
         # Strings in this target will also be kept in the base apk rather than placed in the language splits.
-        shared_resources_allowlist_target =
-            "//android_webview:system_webview_no_weblayer_apk"
+        # shared_resources_allowlist_target =
+        #     "//android_webview:system_webview_no_weblayer_apk"
 
         # Ensure the localized resources for all locales are used, even when
         # a smaller set is specified through aapt_locale_allowlist.
-        shared_resources_allowlist_locales = platform_pak_locales
+        #shared_resources_allowlist_locales = platform_pak_locales
       }
 
       deps = []
@@ -2640,21 +2663,23 @@ if (current_toolchain == default_toolchain) {
       }
       if (!_is_trichrome) {
         deps += [
-          "//android_webview:platform_service_bridge_upstream_implementation_java",
-          "//android_webview/nonembedded:icon_resources",
-          "//android_webview/nonembedded:monochrome_devui_launcher_icon_resources",
+          # "//android_webview:platform_service_bridge_upstream_implementation_java",
+          # "//android_webview/nonembedded:icon_resources",
+          # "//android_webview/nonembedded:monochrome_devui_launcher_icon_resources",
         ]
         if (!_is_bundle) {
           deps += [ ":monochrome_java" ]
         }
-        if (webview_includes_weblayer) {
-          deps += [ "//weblayer/browser/java:upstream_java" ]
-        }
+        # if (webview_includes_weblayer) {
+        #   deps += [ "//weblayer/browser/java:upstream_java" ]
+        # }
       }
+      deps += brave_monochrome_public_apk_or_module_tmpl_deps loadable_modules = brave_monochrome_public_apk_or_module_tmpl_loadable_modules secondary_abi_loadable_modules = brave_monochrome_public_apk_or_module_tmpl_secondary_abi_loadable_modules
     }
   }
 
   if (android_64bit_target_cpu && skip_secondary_abi_for_cq) {
+print("android_64bit_target_cpu && skip_secondary_abi_for_cq")
     group("trichrome_library_apk") {
       deps = [ ":trichrome_library_64_apk" ]
     }
@@ -2662,12 +2687,16 @@ if (current_toolchain == default_toolchain) {
       deps = [ ":monochrome_64_public_apk" ]
     }
   } else {
+print("ELSE: android_64bit_target_cpu && skip_secondary_abi_for_cq")
+## => here
     monochrome_public_apk_or_module_tmpl("monochrome_public_apk") {
+print("//chrome/android:monochrome_public_apk")
       apk_name = "MonochromePublic"
       target_type = "android_apk"
       if (android_64bit_target_cpu) {
         is_64_bit_browser = false
         include_64_bit_webview = true
+        #include_64_bit_webview = false #AB - has no effect
       }
     }
 
@@ -3117,7 +3146,7 @@ if (current_toolchain == default_toolchain) {
   script_test("monochrome_webview_finch_smoke_tests") {
     script = "//testing/scripts/run_finch_smoke_tests_android.py"
     data_deps = [
-      "//android_webview/tools/system_webview_shell:system_webview_shell_apk",
+#      "//android_webview/tools/system_webview_shell:system_webview_shell_apk",
       "//chrome/android:monochrome_public_apk",
       "//third_party/blink/tools:wpt_tests_android_isolate",
     ]
@@ -3329,7 +3358,7 @@ if (current_toolchain == default_toolchain) {
         deps = [
           ":trichrome_chrome_minimal_apks",
           ":trichrome_library_apk",
-          "//android_webview:trichrome_webview_minimal_apks",
+#          "//android_webview:trichrome_webview_minimal_apks",
         ]
       }
 
@@ -3378,7 +3407,7 @@ if (current_toolchain == default_toolchain) {
     deps = [
       ":trichrome_chrome_bundle",
       ":trichrome_library_apk",
-      "//android_webview:trichrome_webview_bundle",
+#      "//android_webview:trichrome_webview_bundle",
     ]
   }
 
@@ -3802,8 +3831,8 @@ template("libmonochrome_apk_or_bundle_tmpl") {
   chrome_common_shared_library(target_name) {
     sources = [ "../browser/android/monochrome_entry_point.cc" ]
     deps = [
-      "//android_webview/lib",
-      "//android_webview/nonembedded",
+      # "//android_webview/lib",
+      # "//android_webview/nonembedded",
       "//components/crash/android:crashpad_main",
     ]
     if (defined(invoker.deps)) {
@@ -3811,10 +3840,10 @@ template("libmonochrome_apk_or_bundle_tmpl") {
     }
 
     defines = []
-    if (webview_includes_weblayer) {
-      defines += [ "WEBVIEW_INCLUDES_WEBLAYER" ]
-      deps += [ "//weblayer:weblayer_lib" ]
-    }
+    # if (webview_includes_weblayer) {
+    #   defines += [ "WEBVIEW_INCLUDES_WEBLAYER" ]
+    #   deps += [ "//weblayer:weblayer_lib" ]
+    # }
 
     if (allow_jni_multiplexing) {
       defines += [ "JNI_REGISTRATION_REQUIRED" ]
@@ -3917,7 +3946,7 @@ if (current_toolchain == default_toolchain &&
         ":monochrome_public_bundle_validate_libs_and_assets",
         ":trichrome_chrome_bundle_validate_libs_and_assets",
         ":trichrome_library_apk_validate_libs_and_assets",
-        "//android_webview:trichrome_webview_bundle_validate_libs_and_assets",
+#        "//android_webview:trichrome_webview_bundle_validate_libs_and_assets",
       ]
       if (android_64bit_target_cpu) {
         deps += [
@@ -3927,9 +3956,9 @@ if (current_toolchain == default_toolchain &&
           ":trichrome_library_32_apk_validate_libs_and_assets",
           ":trichrome_library_64_32_apk_validate_libs_and_assets",
           ":trichrome_library_64_apk_validate_libs_and_assets",
-          "//android_webview:trichrome_webview_32_bundle_validate_libs_and_assets",
-          "//android_webview:trichrome_webview_64_32_bundle_validate_libs_and_assets",
-          "//android_webview:trichrome_webview_64_bundle_validate_libs_and_assets",
+          # "//android_webview:trichrome_webview_32_bundle_validate_libs_and_assets",
+          # "//android_webview:trichrome_webview_64_32_bundle_validate_libs_and_assets",
+          # "//android_webview:trichrome_webview_64_bundle_validate_libs_and_assets",
         ]
       }
     }
@@ -3939,8 +3968,8 @@ if (current_toolchain == default_toolchain &&
         ":monochrome_public_bundle_validate_proguard_config",
         ":trichrome_chrome_bundle__base_bundle_module_validate_android_manifest",
         ":trichrome_library_apk_validate_android_manifest",
-        "//android_webview:system_webview_base_bundle_module_validate_android_manifest",
-        "//android_webview:trichrome_webview_base_bundle_module_validate_android_manifest",
+        # "//android_webview:system_webview_base_bundle_module_validate_android_manifest",
+        # "//android_webview:trichrome_webview_base_bundle_module_validate_android_manifest",
       ]
     }
   }
