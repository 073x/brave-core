diff --git a/third_party/blink/renderer/core/fetch/fetch_manager.cc b/third_party/blink/renderer/core/fetch/fetch_manager.cc
index 5c62a59abe13374d9ace87ec5cd4d48de6c02625..582610d9cdac27e1d963ca1c88580bf5c149b97f 100644
--- a/third_party/blink/renderer/core/fetch/fetch_manager.cc
+++ b/third_party/blink/renderer/core/fetch/fetch_manager.cc
@@ -68,6 +68,14 @@
 #include "third_party/blink/renderer/platform/wtf/text/wtf_string.h"
 #include "third_party/blink/renderer/platform/wtf/vector.h"
 
+#include "brave/third_party/blink/brave_page_graph/buildflags/buildflags.h"
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+#include "brave/third_party/blink/brave_page_graph/page_graph.h"
+#include "brave/third_party/blink/brave_page_graph/utilities/response_metadata.h"
+
+using brave_page_graph::PageGraph;
+#endif
+
 using network::mojom::CredentialsMode;
 using network::mojom::FetchResponseType;
 using network::mojom::RedirectMode;
@@ -315,7 +323,11 @@ bool FetchManager::Loader::WillFollowRedirect(
 }
 
 void FetchManager::Loader::DidReceiveResponse(
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+    uint64_t brave_inspector_id,
+#else
     uint64_t,
+#endif
     const ResourceResponse& response) {
   // Verify that we're dealing with the URL we expect (which could be an
   // HTTPS-upgraded variant of `url_list_.back()`.
@@ -476,6 +488,16 @@ void FetchManager::Loader::DidReceiveResponse(
 
   response_has_no_store_header_ = response.CacheControlContainsNoStore();
 
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+  {
+    PageGraph* page_graph = PageGraph::GetFromExecutionContext(*execution_context_);
+    if (page_graph != nullptr) {
+      page_graph->RegisterRequestComplete(brave_inspector_id,
+        ResourceType::kRaw, brave_page_graph::ResponseMetadata(response), "");
+    }
+  }
+#endif
+
   Response* r =
       Response::Create(resolver_->GetExecutionContext(), tainted_response);
   r->headers()->SetGuard(Headers::kImmutableGuard);
@@ -802,6 +824,17 @@ void FetchManager::Loader::PerformHTTPFetch(ExceptionState& exception_state) {
   threadable_loader_ = MakeGarbageCollected<ThreadableLoader>(
       *execution_context_, this, resource_loader_options);
   threadable_loader_->Start(request);
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+  {
+    PageGraph* page_graph = PageGraph::GetFromExecutionContext(*execution_context_);
+    if (page_graph != nullptr) {
+      page_graph->RegisterRequestStartFromCurrentScript(
+        threadable_loader_->GetRawResource()->InspectorId(),
+        fetch_request_data_->Url(),
+        brave_page_graph::RequestType::kRequestTypeUnknown);
+    }
+  }
+#endif
 }
 
 // performDataFetch() is almost the same as performHTTPFetch(), except for:
@@ -830,6 +863,17 @@ void FetchManager::Loader::PerformDataFetch() {
   threadable_loader_ = MakeGarbageCollected<ThreadableLoader>(
       *execution_context_, this, resource_loader_options);
   threadable_loader_->Start(request);
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+  {
+    PageGraph* page_graph = PageGraph::GetFromExecutionContext(*execution_context_);
+    if (page_graph != nullptr) {
+      page_graph->RegisterRequestStartFromCurrentScript(
+        threadable_loader_->GetRawResource()->InspectorId(),
+        fetch_request_data_->Url(),
+        brave_page_graph::RequestType::kRequestTypeUnknown);
+    }
+  }
+#endif
 }
 
 void FetchManager::Loader::Failed(const String& message) {
