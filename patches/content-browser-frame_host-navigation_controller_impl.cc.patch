diff --git a/content/browser/frame_host/navigation_controller_impl.cc b/content/browser/frame_host/navigation_controller_impl.cc
index d47e3fba4fb3f9048598dd4d56f156ab740fb56c..e47f608d265dbbb0edd2e37934885d7beb5b239e 100644
--- a/content/browser/frame_host/navigation_controller_impl.cc
+++ b/content/browser/frame_host/navigation_controller_impl.cc
@@ -2346,7 +2346,8 @@ NavigationControllerImpl::GetSessionStorageNamespace(SiteInstance* instance) {
     // this if statement so |instance| must not be NULL.
     partition_id =
         GetContentClient()->browser()->GetStoragePartitionIdForSite(
-            browser_context_, instance->GetSiteURL());
+            browser_context_,
+            instance->GetSiteURL(), instance->GetFirstPartyURL());
   }
 
   // TODO(ajwong): Should this use the |partition_id| directly rather than
@@ -2806,16 +2807,17 @@ void NavigationControllerImpl::NavigateWithoutEntry(
   // Note: we intentionally leave the pending entry in place for renderer debug
   // URLs, unlike the cases below where we clear it if the navigation doesn't
   // proceed.
-  if (IsRendererDebugURL(params.url)) {
+  const GURL url = params.url.SchemeIs(url::kJavaScriptScheme) ? params.url : pending_entry_->GetURL();
+  if (IsRendererDebugURL(url)) {
     // Renderer-debug URLs won't go through NavigationThrottlers so we have to
     // check them explicitly. See bug 913334.
     if (GetContentClient()->browser()->IsRendererDebugURLBlacklisted(
-            params.url, browser_context_)) {
+            url, browser_context_)) {
       DiscardPendingEntry(false);
       return;
     }
 
-    HandleRendererDebugURL(node, params.url);
+    HandleRendererDebugURL(node, url);
     return;
   }
 
