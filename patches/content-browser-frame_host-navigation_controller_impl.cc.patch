diff --git a/content/browser/frame_host/navigation_controller_impl.cc b/content/browser/frame_host/navigation_controller_impl.cc
index 005d9dcf49acc1d649430f7dedde84053c0a55f9..01c765d71f8076702638d335f3a298b26a38a4ab 100644
--- a/content/browser/frame_host/navigation_controller_impl.cc
+++ b/content/browser/frame_host/navigation_controller_impl.cc
@@ -2423,6 +2423,11 @@ SessionStorageNamespace* NavigationControllerImpl::GetSessionStorageNamespace(
         browser_context_, instance->GetSiteURL());
   }
 
+  if (instance && !instance->GetMainFrameSite().is_empty()) {
+    partition_id = instance->GetMainFrameSite().spec() + ":" + instance->GetSiteURL().spec();;
+    LOG(ERROR) << "setting partition id for " << partition_id;
+  }
+
   // TODO(ajwong): Should this use the |partition_id| directly rather than
   // re-lookup via |instance|?  http://crbug.com/142685
   StoragePartition* partition =
@@ -2906,16 +2911,17 @@ void NavigationControllerImpl::NavigateWithoutEntry(
   // Note: we intentionally leave the pending entry in place for renderer debug
   // URLs, unlike the cases below where we clear it if the navigation doesn't
   // proceed.
-  if (IsRendererDebugURL(params.url)) {
+  const GURL url = params.url.SchemeIs(url::kJavaScriptScheme) ? params.url : pending_entry_->GetURL();
+  if (IsRendererDebugURL(url)) {
     // Renderer-debug URLs won't go through NavigationThrottlers so we have to
     // check them explicitly. See bug 913334.
     if (GetContentClient()->browser()->IsRendererDebugURLBlacklisted(
-            params.url, browser_context_)) {
+            url, browser_context_)) {
       DiscardPendingEntry(false);
       return;
     }
 
-    HandleRendererDebugURL(node, params.url);
+    HandleRendererDebugURL(node, url);
     return;
   }
 
