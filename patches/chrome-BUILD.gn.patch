diff --git a/chrome/BUILD.gn b/chrome/BUILD.gn
index abbab2664254c9be1ec5074463722c1365590cd0..a114baddd2b52aa9deaf7ee15ea74e909c54522e 100644
--- a/chrome/BUILD.gn
+++ b/chrome/BUILD.gn
@@ -184,6 +184,10 @@ if (!is_android && !is_mac) {
           "common/crash_keys.cc",
           "common/crash_keys.h",
         ]
+        if (brave_chromium_build) {
+          sources -= [ "app/chrome_exe.rc", ]
+          sources += [ "//brave/app/brave_exe.rc", ]
+        }
 
         deps += [
           ":chrome_dll",
@@ -260,6 +264,7 @@ if (!is_android && !is_mac) {
 
           # Needed to use the master_preferences functions
           "//chrome/installer/util:with_no_strings",
+          "//components/unified_consent",
           "//content/public/app:both",
           "//content/public/common:service_names",
 
@@ -409,6 +414,7 @@ if (is_win) {
       "//chrome_elf",
       "//components/crash/content/app",
       "//components/policy:generated",
+      "//components/unified_consent",
       "//content/app/resources",
       "//content/public/common:service_names",
       "//crypto",
@@ -514,6 +520,7 @@ if (is_win) {
         "//chrome_elf",
         "//components/browser_watcher:browser_watcher_client",
         "//components/crash/content/app",
+        "//components/unified_consent",
         "//content/public/app:child",
         "//content/public/common:service_names",
         "//headless:headless_shell_child_lib",
@@ -617,6 +624,11 @@ if (is_win) {
     ]
   }
 
+if (brave_chromium_build) {
+  group("chrome_app") {
+    public_deps = [ "//brave:chrome_app", ]
+  }
+} else {
   mac_app_bundle("chrome_app") {
     output_name = chrome_product_full_name
 
@@ -653,6 +665,7 @@ if (is_win) {
                   rebase_path("app/app.exports", root_build_dir) ]
     }
   }
+}
 
   compiled_action("chrome_app_strings") {
     tool = "//chrome/tools/build/mac:infoplist_strings_tool"
@@ -682,7 +695,7 @@ if (is_win) {
     args =
         [
           "-b",
-          "${branding_path_component}_strings",
+          _strings_file,
           "-v",
           rebase_path(chrome_version_file, root_build_dir),
           "-g",
@@ -1207,6 +1220,7 @@ if (is_win) {
       "//components/policy:generated",
       "//content/public/app:both",
       "//content/public/common:service_names",
+      "//components/unified_consent",
       "//headless:headless_shell_lib",
       "//services/service_manager/embedder",
       "//third_party/cld_3/src/src:cld_3",
@@ -1274,6 +1288,10 @@ if (is_win) {
     if (is_chrome_branded) {
       deps += [ ":default_apps" ]
     }
+    if (brave_chromium_build) {
+      deps += [ "//brave:framework_bundle_data", ]
+      if (defined(chrome_framework_version)) { framework_contents += [ "Frameworks", ] }
+    }
 
     ldflags = [
       "-Wl,-install_name,@executable_path/../Versions/$chrome_version_full/$chrome_framework_name.framework/$chrome_framework_name",
@@ -1433,6 +1451,7 @@ if (is_win) {
 
 group("browser_dependencies") {
   public_deps = [
+    "//brave:browser_dependencies",
     "//chrome/browser",
     "//chrome/common",
     "//components/sync",
@@ -1470,6 +1489,7 @@ group("browser_dependencies") {
 
 group("child_dependencies") {
   public_deps = [
+    "//brave:child_dependencies",
     "//chrome/browser/devtools",
     "//chrome/child",
     "//chrome/common",
@@ -1492,7 +1512,7 @@ group("child_dependencies") {
 if (is_win) {
   process_version_rc_template("chrome_exe_version") {
     sources = [
-      "app/chrome_exe.ver",
+      "//brave/app/brave_exe.ver",
     ]
     output = "$target_gen_dir/chrome_exe_version.rc"
   }
@@ -1565,6 +1585,7 @@ group("resources") {
     "//chrome/browser:resources",
     "//chrome/common:resources",
     "//chrome/renderer:resources",
+    "//brave:resources",
   ]
 }
 
@@ -1802,6 +1823,7 @@ if (is_android) {
       "//components/safe_browsing/android:safe_browsing_mobile",
       "//components/services/heap_profiling",
       "//components/tracing",
+      "//components/unified_consent",
       "//content/public/app:both",
       "//content/public/common:service_names",
       "//services/service_manager/embedder",
