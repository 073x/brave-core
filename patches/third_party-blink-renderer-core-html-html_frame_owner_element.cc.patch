diff --git a/third_party/blink/renderer/core/html/html_frame_owner_element.cc b/third_party/blink/renderer/core/html/html_frame_owner_element.cc
index a1a4a7fee14c0293fdda1d10fcd01894d27070e5..26efbc41830fb3bca22f2c3e68df5302bb8a7c7d 100644
--- a/third_party/blink/renderer/core/html/html_frame_owner_element.cc
+++ b/third_party/blink/renderer/core/html/html_frame_owner_element.cc
@@ -61,6 +61,13 @@
 #include "third_party/blink/renderer/platform/runtime_enabled_features.h"
 #include "third_party/blink/renderer/platform/weborigin/security_origin.h"
 
+// #if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+#include "third_party/blink/renderer/core/dom/dom_node_ids.h"
+#include "third_party/blink/renderer/core/inspector/identifiers_factory.h"
+
+#include "brave/third_party/blink/brave_page_graph/page_graph.h"
+// #endif
+
 namespace blink {
 
 namespace {
@@ -224,6 +231,17 @@ void HTMLFrameOwnerElement::SetContentFrame(Frame& frame) {
 
   for (ContainerNode* node = this; node; node = node->ParentOrShadowHostNode())
     node->IncrementConnectedSubframeCount();
+
+// #if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+  if (frame.IsRemoteFrame()) {
+    ::brave_page_graph::PageGraph* const page_graph =
+        GetDocument().GetPageGraph();
+    if (page_graph) {
+      page_graph->RegisterRemoteFrameCreated(
+          DOMNodeIds::IdForNode(this), IdentifiersFactory::FrameId(&frame));
+    }
+  }
+// #endif
 }
 
 void HTMLFrameOwnerElement::ClearContentFrame() {
