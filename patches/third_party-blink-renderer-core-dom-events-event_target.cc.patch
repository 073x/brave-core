diff --git a/third_party/blink/renderer/core/dom/events/event_target.cc b/third_party/blink/renderer/core/dom/events/event_target.cc
index af75276bc27efeb8ec32fa98cdb613bb92c43c7a..d03b096ab9f673aa7d7999d5065460e2678da0e1 100644
--- a/third_party/blink/renderer/core/dom/events/event_target.cc
+++ b/third_party/blink/renderer/core/dom/events/event_target.cc
@@ -469,6 +469,7 @@ bool EventTarget::AddEventListenerInternal(
   bool added = EnsureEventTargetData().event_listener_map.Add(
       event_type, listener, options, &registered_listener);
   if (added) {
+    BRAVE_EVENT_TARGET_ADD_EVENT_LISTENER_INTERNAL
     if (options->hasSignal()) {
       // Instead of passing the entire |options| here, which could create a
       // circular reference due to |options| holding a Member<AbortSignal>, just
@@ -598,6 +599,7 @@ bool EventTarget::RemoveEventListenerInternal(
                                     &index_of_removed_listener,
                                     &registered_listener))
     return false;
+  BRAVE_EVENT_TARGET_REMOVE_EVENT_LISTENER_INTERNAL
 
   // Notify firing events planning to invoke the listener at 'index' that
   // they have one less listener to invoke.
@@ -656,6 +658,7 @@ bool EventTarget::SetAttributeEventListener(const AtomicString& event_type,
       listener->async_task_context()->Schedule(GetExecutionContext(),
                                                event_type);
     }
+    BRAVE_EVENT_TARGET_SET_ATTRIBUTE_EVENT_LISTENER
     registered_listener->SetCallback(listener);
     return true;
   }
