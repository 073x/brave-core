diff --git a/third_party/blink/renderer/core/loader/document_loader.cc b/third_party/blink/renderer/core/loader/document_loader.cc
index 256190dddfe1df9124e9fee703e38316741047dc..74c0e89b89e9a849c0c96cbc9a3e2765e7065306 100644
--- a/third_party/blink/renderer/core/loader/document_loader.cc
+++ b/third_party/blink/renderer/core/loader/document_loader.cc
@@ -140,6 +140,8 @@
 #include "third_party/blink/renderer/platform/wtf/text/wtf_string.h"
 #include "third_party/blink/renderer/platform/wtf/vector.h"
 
+#include "brave/third_party/blink/brave_page_graph/page_graph.h"
+#include "brave/third_party/blink/brave_page_graph/types.h"
 namespace blink {
 
 const base::Feature kCacheInlineScriptCode{"CacheInlineScriptCode",
@@ -1032,6 +1034,11 @@ void DocumentLoader::BodyLoadingFinished(
     int64_t total_decoded_body_length,
     bool should_report_corb_blocking,
     const absl::optional<WebURLError>& error) {
+  // Another option for this is BodyDataReceived. Unclear which one is better.
+  brave_page_graph::PageGraph* pg = GetFrame()->GetDocument()->GetPageGraph();
+  if (pg && url_.Protocol() != "chrome-error" && url_.Protocol() != "about") {
+    pg->RegisterRequestCompleteForDocument(main_resource_identifier_, total_decoded_body_length);
+  }
   TRACE_EVENT0("loading", "DocumentLoader::BodyLoadingFinished");
   response_.SetEncodedDataLength(total_encoded_data_length);
   response_.SetEncodedBodyLength(total_encoded_body_length);
@@ -1815,6 +1822,12 @@ void DocumentLoader::StartLoadingBodyWithCodeCache() {
     // once the code cache is available.
     parser_->SetIsPreloading(true);
   }
+
+  brave_page_graph::PageGraph* pg = GetFrame()->GetDocument()->GetPageGraph();
+  if (pg) {
+    pg->RegisterRequestStartForDocument(DOMNodeIds::IdForNode(GetFrame()->GetDocument()), main_resource_identifier_, url_, GetFrame()->IsMainFrame());
+  }
+
   body_loader_->StartLoadingBody(this, code_cache_host);
 }
 
