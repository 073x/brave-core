diff --git a/chrome/installer/mac/signing/signing.py b/chrome/installer/mac/signing/signing.py
index de69f7ba6cca5729ab83ff076211be36354d0f60..875803bff951845a97cb771d445b272113a5ed91 100644
--- a/chrome/installer/mac/signing/signing.py
+++ b/chrome/installer/mac/signing/signing.py
@@ -11,6 +11,7 @@ import os.path
 
 from . import commands
 from .model import CodeSignOptions, CodeSignedProduct, VerifyOptions
+from signing_helper import AddBravePartsForSigning, GenerateBraveWidevineSigFile
 
 _PROVISIONPROFILE_EXT = '.provisionprofile'
 _PROVISIONPROFILE_DEST = 'embedded.provisionprofile'
@@ -76,7 +77,8 @@ def get_parts(config):
                 '{0.framework_dir}/Helpers/{0.product} Helper.app'.format(
                     config),
                 '{}.helper'.format(uncustomized_bundle_id),
-                options=full_hardened_runtime_options,
+                options=CodeSignOptions.RESTRICT + CodeSignOptions.KILL +
+                CodeSignOptions.HARDENED_RUNTIME,
                 verify_options=VerifyOptions.DEEP),
         'helper-renderer-app':
             CodeSignedProduct(
@@ -124,6 +126,7 @@ def get_parts(config):
             library_basename.replace('.dylib', ''),
             verify_options=VerifyOptions.DEEP)
 
+    AddBravePartsForSigning(parts, config)
     return parts
 
 
@@ -168,7 +171,7 @@ def sign_part(paths, config, part):
         part: The |model.CodeSignedProduct| to sign. The product's |path| must
             be in |paths.work|.
     """
-    command = ['codesign', '--sign', config.identity]
+    command = ['codesign', '--force', '--sign', config.identity]
     if config.notary_user:
         # Assume if the config has notary authentication information that the
         # products will be notarized, which requires a secure timestamp.
@@ -260,6 +263,7 @@ def sign_chrome(paths, config, sign_framework=False):
                 continue
             sign_part(paths, config, part)
 
+        GenerateBraveWidevineSigFile(paths, config, parts['framework'])
         # Sign the framework bundle.
         sign_part(paths, config, parts['framework'])
 
