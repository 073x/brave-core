diff --git a/include/v8-isolate.h b/include/v8-isolate.h
index 215d80a920227c43646c0d6e999cd4160f3a8e5c..47011eb8adefc69c1112caebf9349149953c2ded 100644
--- a/include/v8-isolate.h
+++ b/include/v8-isolate.h
@@ -194,6 +194,21 @@ enum RAILMode : unsigned {
  */
 enum class MemoryPressureLevel { kNone, kModerate, kCritical };
 
+// #if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+typedef void (*EvalScriptCompiledFunc)(v8::Isolate& isolate,
+                                       const int parent_script_id,
+                                       const int script_id,
+                                       v8::Local<v8::String> source);
+
+typedef void (*BuiltInFuncCallFunc)(v8::Isolate& isolate,
+                                    const char* builtin_name,
+                                    const std::vector<const std::string>& args);
+
+typedef void (*BuiltInFuncResponseFunc)(v8::Isolate& isolate,
+                                        const char* builtin_name,
+                                        const std::string& value);
+// #endif
+
 /**
  * Isolate represents an isolated instance of the V8 engine.  V8 isolates have
  * completely separate states.  Objects from one isolate must not be used in
@@ -1686,6 +1701,15 @@ class V8_EXPORT Isolate {
   void operator delete(void*, size_t) = delete;
   void operator delete[](void*, size_t) = delete;
 
+// #if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+  int GetExecutingScriptId(int* out_script_position = nullptr);
+  void GetAllExecutingScripts(std::function<void(int, int)> callback);
+
+  void SetEvalScriptCompiledFunc(const EvalScriptCompiledFunc func);
+  void SetBuiltInFuncCallFunc(const BuiltInFuncCallFunc func);
+  void SetBuiltInFuncResponseFunc(const BuiltInFuncResponseFunc func);
+// #endif
+
  private:
   template <class K, class V, class Traits>
   friend class PersistentValueMapBase;
