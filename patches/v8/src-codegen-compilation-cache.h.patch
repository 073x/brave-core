diff --git a/src/codegen/compilation-cache.h b/src/codegen/compilation-cache.h
index d4f4ae52dcaa751f7cd5790eb8c5ed0cae9b24d0..94f418657d806a0fd3276d510e3293cacf7a52fa 100644
--- a/src/codegen/compilation-cache.h
+++ b/src/codegen/compilation-cache.h
@@ -85,10 +85,10 @@ class CompilationCacheScript : public CompilationSubCache {
                                          MaybeHandle<Object> name,
                                          int line_offset, int column_offset,
                                          ScriptOriginOptions resource_options,
-                                         LanguageMode language_mode);
+                                         LanguageMode language_mode, int parent_script_id);
 
   void Put(Handle<String> source, LanguageMode language_mode,
-           Handle<SharedFunctionInfo> function_info);
+           Handle<SharedFunctionInfo> function_info, int parent_script_id);
 
   void Age() override;
 
@@ -120,12 +120,12 @@ class CompilationCacheEval : public CompilationSubCache {
   InfoCellPair Lookup(Handle<String> source,
                       Handle<SharedFunctionInfo> outer_info,
                       Handle<Context> native_context,
-                      LanguageMode language_mode, int position);
+                      LanguageMode language_mode, int position, int parent_script_id);
 
   void Put(Handle<String> source, Handle<SharedFunctionInfo> outer_info,
            Handle<SharedFunctionInfo> function_info,
            Handle<Context> native_context, Handle<FeedbackCell> feedback_cell,
-           int position);
+           int position, int parent_script_id);
 
   void Age() override;
 
@@ -165,7 +165,7 @@ class V8_EXPORT_PRIVATE CompilationCache {
   MaybeHandle<SharedFunctionInfo> LookupScript(
       Handle<String> source, MaybeHandle<Object> name, int line_offset,
       int column_offset, ScriptOriginOptions resource_options,
-      LanguageMode language_mode);
+      LanguageMode language_mode, int parent_script_id);
 
   // Finds the shared function info for a source string for eval in a
   // given context.  Returns an empty handle if the cache doesn't
@@ -173,7 +173,7 @@ class V8_EXPORT_PRIVATE CompilationCache {
   InfoCellPair LookupEval(Handle<String> source,
                           Handle<SharedFunctionInfo> outer_info,
                           Handle<Context> context, LanguageMode language_mode,
-                          int position);
+                          int position, int parent_script_id);
 
   // Returns the regexp data associated with the given regexp if it
   // is in cache, otherwise an empty handle.
@@ -183,14 +183,14 @@ class V8_EXPORT_PRIVATE CompilationCache {
   // Associate the (source, kind) pair to the shared function
   // info. This may overwrite an existing mapping.
   void PutScript(Handle<String> source, LanguageMode language_mode,
-                 Handle<SharedFunctionInfo> function_info);
+                 Handle<SharedFunctionInfo> function_info, int parent_script_i);
 
   // Associate the (source, context->closure()->shared(), kind) triple
   // with the shared function info. This may overwrite an existing mapping.
   void PutEval(Handle<String> source, Handle<SharedFunctionInfo> outer_info,
                Handle<Context> context,
                Handle<SharedFunctionInfo> function_info,
-               Handle<FeedbackCell> feedback_cell, int position);
+               Handle<FeedbackCell> feedback_cell, int position, int parent_script_id);
 
   // Associate the (source, flags) pair to the given regexp data.
   // This may overwrite an existing mapping.
