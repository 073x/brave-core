diff --git a/third_party/blink/renderer/core/inspector/inspector_emulation_agent_test.cc b/third_party/blink/renderer/core/inspector/inspector_emulation_agent_test.cc
index bc6e9a1bfd34f4c5ee481252ced151ed80940629..3c85c1432755678be83b2c0f0c6bcf55a839d3cd 100644
--- a/third_party/blink/renderer/core/inspector/inspector_emulation_agent_test.cc
+++ b/third_party/blink/renderer/core/inspector/inspector_emulation_agent_test.cc
@@ -7,6 +7,7 @@
 #include "media/media_buildflags.h"
 #include "testing/gtest/include/gtest/gtest.h"
 #include "third_party/blink/public/common/buildflags.h"
+#include "third_party/blink/public/common/features.h"
 
 namespace blink {
 
@@ -22,6 +23,8 @@ TEST_F(InspectorEmulationAgentTest, ModifiesAcceptHeader) {
       "image/apng,image/svg+xml,image/*,*/*;q=0.8";
   String expected_no_avif =
       "image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8";
+  String expected_no_jxl =
+      "image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8";
 #else
   String expected_default =
       "image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8";
@@ -30,8 +33,38 @@ TEST_F(InspectorEmulationAgentTest, ModifiesAcceptHeader) {
       "image/apng,image/svg+xml,image/*,*/*;q=0.8";
   String expected_no_avif =
       "image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8";
+  String expected_no_jxl =
+      "image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8";
 #endif
 
+#if BUILDFLAG(ENABLE_JXL_DECODER)
+  bool jxl_enabled = base::FeatureList::IsEnabled(features::kJXL);
+  if (jxl_enabled) {
+#if BUILDFLAG(ENABLE_AV1_DECODER)
+    expected_default =
+        "image/jxl,image/avif,image/webp,image/apng,image/svg+xml,image/*,*/"
+        "*;q=0.8";
+    expected_no_webp =
+        "image/jxl,image/avif,image/apng,image/svg+xml,image/*,*/*;q=0.8";
+    expected_no_webp_and_avif =
+        "image/jxl,image/apng,image/svg+xml,image/*,*/*;q=0.8";
+    expected_no_avif =
+        "image/jxl,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8";
+    expected_no_jxl =
+        "image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8";
+#else   // BUILDFLAG(ENABLE_AV1_DECODER)
+    expected_default =
+        "image/jxl,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8";
+    expected_no_webp = "image/jxl,image/apng,image/svg+xml,image/*,*/*;q=0.8";
+    expected_no_webp_and_avif =
+        "image/jxl,image/apng,image/svg+xml,image/*,*/*;q=0.8";
+    expected_no_avif =
+        "image/jxl,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8";
+    expected_no_jxl = "image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8";
+#endif  // BUILDFLAG(ENABLE_AV1_DECODER)
+  }
+#endif  // BUILDFLAG(ENABLE_JXL_DECODER)
+
   HashSet<String> disabled_types;
   EXPECT_EQ(InspectorEmulationAgent::OverrideAcceptImageHeader(&disabled_types),
             expected_default);
@@ -44,6 +77,10 @@ TEST_F(InspectorEmulationAgentTest, ModifiesAcceptHeader) {
   disabled_types.erase("image/webp");
   EXPECT_EQ(InspectorEmulationAgent::OverrideAcceptImageHeader(&disabled_types),
             expected_no_avif);
+  disabled_types.erase("image/avif");
+  disabled_types.insert("image/jxl");
+  EXPECT_EQ(InspectorEmulationAgent::OverrideAcceptImageHeader(&disabled_types),
+            expected_no_jxl);
 }
 
 }  // namespace blink
