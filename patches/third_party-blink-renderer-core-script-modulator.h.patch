diff --git a/third_party/blink/renderer/core/script/modulator.h b/third_party/blink/renderer/core/script/modulator.h
index 531ffc241bab2ff4e8cedcbcadd2d2786993032e..19daa0d3605d55b191ab1a99ef1fc64e4c3549b2 100644
--- a/third_party/blink/renderer/core/script/modulator.h
+++ b/third_party/blink/renderer/core/script/modulator.h
@@ -25,6 +25,8 @@
 #include "third_party/blink/renderer/platform/wtf/text/text_position.h"
 #include "third_party/blink/renderer/platform/wtf/text/wtf_string.h"
 
+#include "third_party/blink/renderer/core/dom/dom_node_ids.h"
+#include "brave/third_party/blink/brave_page_graph/page_graph.h"
 namespace blink {
 
 class ModuleScript;
@@ -102,7 +104,7 @@ class CORE_EXPORT Modulator : public GarbageCollected<Modulator>,
                               public V8PerContextData::Data,
                               public NameClient {
  public:
-  static Modulator* From(ScriptState*);
+  static Modulator* From(ScriptState*, ::brave_page_graph::PageGraph*, DOMNodeId);
   virtual ~Modulator();
 
   static void SetModulator(ScriptState*, Modulator*);
@@ -178,6 +180,7 @@ class CORE_EXPORT Modulator : public GarbageCollected<Modulator>,
   virtual void ResolveDynamically(const ModuleRequest& module_request,
                                   const KURL&,
                                   const ReferrerScriptInfo&,
+                                  const ::brave_page_graph::ScriptId,
                                   ScriptPromiseResolver*) = 0;
 
   virtual ScriptValue CreateTypeError(const String& message) const = 0;
@@ -224,6 +227,8 @@ class CORE_EXPORT Modulator : public GarbageCollected<Modulator>,
 
   // Produce V8 code cache for the given ModuleScript and its submodules.
   virtual void ProduceCacheModuleTreeTopLevel(ModuleScript*) = 0;
+  virtual ::brave_page_graph::PageGraph* GetPageGraph() const = 0;
+  virtual DOMNodeId GetInitiatingDOMNodeId() const = 0;
 };
 
 }  // namespace blink
