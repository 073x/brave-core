diff --git a/chrome/browser/ui/webui/settings/about_handler.cc b/chrome/browser/ui/webui/settings/about_handler.cc
index ebe6fb285e29b2bf59006a49173cee2f1f06f5f9..6b8c05e0cb0c1e1bcd0050f6b9e196cf6f403c7d 100644
--- a/chrome/browser/ui/webui/settings/about_handler.cc
+++ b/chrome/browser/ui/webui/settings/about_handler.cc
@@ -446,7 +446,9 @@ void AboutHandler::RegisterMessages() {
 
 void AboutHandler::OnJavascriptAllowed() {
   apply_changes_from_upgrade_observer_ = true;
+#if !defined(OS_ANDROID)
   version_updater_.reset(VersionUpdater::Create(web_ui()->GetWebContents()));
+#endif
   policy_registrar_ = std::make_unique<policy::PolicyChangeRegistrar>(
       g_browser_process->policy_service(),
       policy::PolicyNamespace(policy::POLICY_DOMAIN_CHROME, std::string()));
@@ -458,7 +460,9 @@ void AboutHandler::OnJavascriptAllowed() {
 
 void AboutHandler::OnJavascriptDisallowed() {
   apply_changes_from_upgrade_observer_ = false;
+#if !defined(OS_ANDROID)
   version_updater_.reset();
+#endif
   policy_registrar_.reset();
 }
 
@@ -586,6 +590,7 @@ void AboutHandler::HandleSetChannel(const base::ListValue* args) {
     return;
   }
 
+#if !defined(OS_ANDROID)
   version_updater_->SetChannel(base::UTF16ToUTF8(channel),
                                is_powerwash_allowed);
   if (user_manager::UserManager::Get()->IsCurrentUserOwner()) {
@@ -594,6 +599,7 @@ void AboutHandler::HandleSetChannel(const base::ListValue* args) {
         base::Bind(&AboutHandler::SetUpdateStatus, base::Unretained(this)),
         VersionUpdater::PromoteCallback());
   }
+#endif
 }
 
 void AboutHandler::HandleGetVersionInfo(const base::ListValue* args) {
@@ -631,18 +637,22 @@ void AboutHandler::HandleGetChannelInfo(const base::ListValue* args) {
   CHECK_EQ(1U, args->GetSize());
   std::string callback_id;
   CHECK(args->GetString(0, &callback_id));
+#if !defined(OS_ANDROID)
   version_updater_->GetChannel(
       true /* get current channel */,
       base::Bind(&AboutHandler::OnGetCurrentChannel, weak_factory_.GetWeakPtr(),
                  callback_id));
+#endif
 }
 
 void AboutHandler::OnGetCurrentChannel(std::string callback_id,
                                        const std::string& current_channel) {
+#if !defined(OS_ANDROID)
   version_updater_->GetChannel(
       false /* get target channel */,
       base::Bind(&AboutHandler::OnGetTargetChannel, weak_factory_.GetWeakPtr(),
                  callback_id, current_channel));
+#endif
 }
 
 void AboutHandler::OnGetTargetChannel(std::string callback_id,
@@ -679,9 +689,11 @@ void AboutHandler::HandleRequestUpdateOverCellular(
 
 void AboutHandler::RequestUpdateOverCellular(const std::string& update_version,
                                              int64_t update_size) {
+#if !defined(OS_ANDROID)
   version_updater_->SetUpdateOverCellularOneTimePermission(
       base::Bind(&AboutHandler::SetUpdateStatus, base::Unretained(this)),
       update_version, update_size);
+#endif
 }
 
 void AboutHandler::HandleRefreshTPMFirmwareUpdateStatus(
@@ -703,9 +715,11 @@ void AboutHandler::HandleGetEndOfLifeInfo(const base::ListValue* args) {
   CHECK_EQ(1U, args->GetSize());
   std::string callback_id;
   CHECK(args->GetString(0, &callback_id));
+#if !defined(OS_ANDROID)
   version_updater_->GetEolInfo(base::BindOnce(&AboutHandler::OnGetEndOfLifeInfo,
                                               weak_factory_.GetWeakPtr(),
                                               callback_id));
+#endif
 }
 
 void AboutHandler::OnGetEndOfLifeInfo(
@@ -729,6 +743,7 @@ void AboutHandler::OnGetEndOfLifeInfo(
 #endif  // defined(OS_CHROMEOS)
 
 void AboutHandler::RequestUpdate() {
+#if !defined(OS_ANDROID)
   version_updater_->CheckForUpdate(
       base::Bind(&AboutHandler::SetUpdateStatus, base::Unretained(this)),
 #if defined(OS_MACOSX)
@@ -736,6 +751,7 @@ void AboutHandler::RequestUpdate() {
 #else
       VersionUpdater::PromoteCallback());
 #endif  // OS_MACOSX
+#endif
 }
 
 void AboutHandler::SetUpdateStatus(VersionUpdater::Status status,
