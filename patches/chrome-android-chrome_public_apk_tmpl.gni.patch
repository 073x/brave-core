diff --git a/chrome/android/chrome_public_apk_tmpl.gni b/chrome/android/chrome_public_apk_tmpl.gni
index eeb286b07aae69c3d12a4f62ab0c1c22500bda7b..fb726d01f229ae08158b820cdcbb1b5b04be1448 100644
--- a/chrome/android/chrome_public_apk_tmpl.gni
+++ b/chrome/android/chrome_public_apk_tmpl.gni
@@ -204,6 +204,7 @@ template("chrome_common_apk_or_module_tmpl") {
         "//android_webview/nonembedded/java/AndroidManifest.xml",
         "//chrome/android/java/AndroidManifest.xml",
       ]
+      includes -= ["//android_webview/nonembedded/java/AndroidManifest.xml" ]
       variables += monochrome_android_manifest_jinja_variables
       if (_is_64_bit_browser) {
         variables += [ "webview_library=libmonochrome_64.so" ]
@@ -279,12 +280,9 @@ template("chrome_common_apk_or_module_tmpl") {
       # Resource allowlist used when generating R.java files and causes
       # only the webview subset of resources to be marked as non-final.
       # Strings in this target will also be kept in the base apk rather than placed in the language splits.
-      shared_resources_allowlist_target =
-          "//android_webview:system_webview_no_weblayer_apk"
 
       # Ensure the localized resources for all locales are used, even when
       # a smaller set is specified through aapt_locale_allowlist.
-      shared_resources_allowlist_locales = platform_pak_locales
 
       product_config_java_packages += [ webview_product_config_java_package ]
 
@@ -312,6 +310,7 @@ template("chrome_common_apk_or_module_tmpl") {
       "*ic_file_download_white*",  # Bottom edge seems misaligned.
       "*ic_lock.*",  # Bottom edge seems misaligned.
     ]
+    resource_exclusion_exceptions += brave_resources_exclusion_exceptions
 
     # Most of these, with the exception of resource_exclusion_exceptions,
     # are currently duplicated in system_webview_apk_tmpl.gni.
@@ -336,6 +335,7 @@ template("chrome_common_apk_or_module_tmpl") {
 
       proguard_enabled = true
       proguard_configs = [ "//chrome/android/proguard/main.flags" ]
+      proguard_configs += [ "//brave/android/java/proguard.flags" ]
       if (_is_monochrome) {
         proguard_configs +=
             [ "//android_webview/nonembedded/java/proguard.flags" ]
@@ -443,6 +443,7 @@ template("chrome_common_apk_or_module_tmpl") {
       if (_include_secondary_abi) {
         deps += [ "//android_webview:monochrome_webview_secondary_abi_assets" ]
       }
+      deps -= [ "//android_webview/glue:glue_java", "//android_webview/nonembedded:monochrome_devui_launcher_icon_resources", "//android_webview/nonembedded:nonembedded_java", ] if (_include_primary_abi) { deps -= [ "//android_webview:monochrome_webview_primary_abi_assets" ] } if (_include_secondary_abi) { deps -= [ "//android_webview:monochrome_webview_secondary_abi_assets" ] }
     }
 
     if (_is_bundle && _is_monochrome) {
@@ -457,6 +458,7 @@ template("chrome_common_apk_or_module_tmpl") {
       assert(!_is_trichrome)
       deps += [ "//chrome/android:chrome_apk_pak_assets" ]
     }
+    deps += brave_public_apk_or_module_tmpl_deps loadable_modules = brave_public_apk_or_module_tmpl_loadable_modules
 
     if (defined(invoker.add_upstream_only_deps) &&
         invoker.add_upstream_only_deps) {
@@ -552,6 +554,7 @@ template("chrome_common_apk_or_module_tmpl") {
           shared_libraries += [ "//chrome/android:libmonochrome_64" ]
           if (_include_32_bit_webview) {
             secondary_abi_shared_libraries += [ "//android_webview:monochrome_64($android_secondary_abi_toolchain)" ]
+            secondary_abi_shared_libraries -= [ "//android_webview:monochrome_64($android_secondary_abi_toolchain)" ]
           }
           if (build_hwasan_splits) {
             shared_libraries +=
@@ -560,6 +563,7 @@ template("chrome_common_apk_or_module_tmpl") {
         } else {
           if (_include_64_bit_webview) {
             shared_libraries += [ "//android_webview:monochrome" ]
+            shared_libraries -= [ "//android_webview:monochrome" ]
           }
           secondary_abi_shared_libraries += [
             "//chrome/android:libmonochrome($android_secondary_abi_toolchain)",
@@ -749,6 +753,7 @@ template("monochrome_public_common_apk_or_module_tmpl") {
     if (!defined(is_monochrome)) {
       is_trichrome = true
     }
+    deps += brave_monochrome_public_apk_or_module_tmpl_deps loadable_modules = brave_monochrome_public_apk_or_module_tmpl_loadable_modules secondary_abi_loadable_modules = brave_monochrome_public_apk_or_module_tmpl_secondary_abi_loadable_modules
   }
 }
 template("chrome_public_common_apk_or_module_tmpl") {
