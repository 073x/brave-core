diff --git a/chrome/browser/ui/webui/settings/safety_check_handler.cc b/chrome/browser/ui/webui/settings/safety_check_handler.cc
index fabe2039537c..aff8d507ec38 100644
--- a/chrome/browser/ui/webui/settings/safety_check_handler.cc
+++ b/chrome/browser/ui/webui/settings/safety_check_handler.cc
@@ -118,6 +118,7 @@ void SafetyCheckHandler::SendSafetyCheckStartedWebUiUpdates() {
 }
 
 void SafetyCheckHandler::PerformSafetyCheck() {
+#if !defined(OS_ANDROID)
   // If the user refreshes the Settings tab in the delay between starting safety
   // check and now, then the check should no longer be run.
   if (!IsJavascriptAllowed())
@@ -166,6 +167,7 @@ void SafetyCheckHandler::PerformSafetyCheck() {
   }
   DCHECK(extension_service_);
   CheckExtensions();
+#endif
 }
 
 SafetyCheckHandler::SafetyCheckHandler(
@@ -205,6 +207,7 @@ void SafetyCheckHandler::HandleGetParentRanDisplayString(
       base::Value(GetStringForParentRan(safety_check_completion_time_)));
 }
 
+#if !defined(OS_ANDROID)
 void SafetyCheckHandler::CheckUpdates() {
   // Usage of base::Unretained(this) is safe, because we own `version_updater_`.
   version_updater_->CheckForUpdate(
@@ -212,6 +215,7 @@ void SafetyCheckHandler::CheckUpdates() {
                  base::Unretained(this)),
       VersionUpdater::PromoteCallback());
 }
+#endif
 
 void SafetyCheckHandler::CheckPasswords() {
   // Remove |this| as an existing observer for BulkLeakCheck if it is
