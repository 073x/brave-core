import("//build/config/locales.gni")
import("//extensions/buildflags/buildflags.gni")
import("//tools/grit/grit_rule.gni")
import("//tools/grit/repack.gni")

assert(enable_extensions)

grit("resources") {
  source = "extension_resources.grd"
  outputs = [
    "grit/brave_rewards_extension_resources_map.cc",
    "grit/brave_rewards_extension_resources_map.h",
    "grit/brave_rewards_extension_resources.h",
    "brave_rewards_extension_resources.pak",
  ]

  deps = [
    "//brave/components/brave_rewards/resources/extension/brave_rewards"
  ]

  resource_ids = "//brave/browser/resources/resource_ids"

  output_dir = "$root_gen_dir/brave/components/brave_rewards/resources/extension"
}

if (is_mac) {
  group("framework_bundle_data") {
    deps = []
    foreach(locale, locales) {
      deps += [":framework_bundle_data_${locale}"]
    }
  }

  foreach(locale, locales) {
    bundle_data("framework_bundle_data_${locale}") {
      locale = string_replace(locale, "-", "_")
      locale = string_replace(locale, "nb", "no")
      sources = [
        "brave_rewards/_locales/$locale/messages.json"
      ]
      outputs = [
        "{{bundle_resources_dir}}/brave_rewards/_locales/$locale/{{source_file_part}}"
      ]
    }
  }
} else {
  group("locales") {
    deps = []
    foreach(locale, locales) {
      deps += [":locales_${locale}"]
    }
  }
  foreach(locale, locales) {
    copy("locales_${locale}") {
      locale = string_replace(locale, "-", "_")
      locale = string_replace(locale, "nb", "no")
      sources = [
        "brave_rewards/_locales/${locale}/messages.json",
      ]
      outputs = [
        "$root_out_dir/resources/brave_rewards/_locales/${locale}/{{source_file_part}}",
      ]
    }
  }
}
